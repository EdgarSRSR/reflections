**Lesson 2**
What happens when you initialize a repository? Why do you need to do it?

When you initialize a repository it doesn't create automatically a commit. You on your own need to do it, so you can decide on what files to commit.

How is the staging area different from the working directory and the repository? What value do you think it offers?

It helps you to plan your commit, by letting you accomodate all the files that your going to save.

How can you use the staging area to make sure you have one commit per logical change?

you can use git diff --staged to check the differences between the commits and the staging area, so you can make good logical changes.

What are some situations when branches would be helpful in keeping your history organized? How would branches help?

If you are creating different versions of a file with variations and you want to compare them, then the branches would be useful.

How do the diagrams help you visualize the branch structure?

It's good to draw diagrams that reflect the branches on the git files, so you can retain an idea of how everything is acommodated- that way you can look at the diagrams to figure out anything if there's confusion.


What is the result of merging two branches together? Why do we represent it in the diagram the way we do?

you create a new branch that contains the changes contained in the two branches.

What are the pros and cons of Gitâ€™s automatic merging vs. always doing merges manually?

automatic merging makes it easier, butmakng it manually helps you make it more carefully and taking into account everything.

